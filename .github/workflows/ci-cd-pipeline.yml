name: CI/CD Pipeline - Test, Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish_github_packages:
        description: 'Publish to GitHub Packages'
        required: false
        default: false
        type: boolean
      publish_container:
        description: 'Publish to Container Registry'
        required: false
        default: false
        type: boolean

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Cache Jest
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/jest
          key: ${{ runner.os }}-jest-${{ hashFiles('**/package-lock.json', '**/jest.config.js') }}
          restore-keys: |
            ${{ runner.os }}-jest-
        
      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Cache webpack build
        uses: actions/cache@v3
        with:
          path: |
            dist
            node_modules/.cache
          key: ${{ runner.os }}-webpack-${{ hashFiles('**/package-lock.json', '**/webpack.config.js') }}
          restore-keys: |
            ${{ runner.os }}-webpack-
        
      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_github_packages == 'true' || github.event.inputs.publish_container == 'true'
    
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
      
      - name: Validate version format
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.]+)?$ ]]; then
            echo "Error: Version $VERSION does not follow semantic versioning format (x.y.z or x.y.z-prerelease)"
            exit 1
          fi
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
      
      - name: Set version for manual runs
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV
      
      - name: Create release archive
        run: |
          zip -r public-repo-${RELEASE_VERSION}.zip dist/
      
      - name: Generate checksums
        run: |
          sha256sum public-repo-${RELEASE_VERSION}.zip > public-repo-${RELEASE_VERSION}.zip.sha256
          echo "Generated SHA256 checksum for release artifact"
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            public-repo-${{ env.RELEASE_VERSION }}.zip
            public-repo-${{ env.RELEASE_VERSION }}.zip.sha256
          name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ env.RELEASE_VERSION }}
            
            ### Verification
            SHA256: `$(cat public-repo-${{ env.RELEASE_VERSION }}.zip.sha256)`
      
      # Publish to GitHub Packages
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
      
      - name: Install dependencies
        run: npm install
      
      - name: Publish to GitHub Packages
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_github_packages == 'true'
        run: |
          # Ensure we have the package.json file
          if [ -f "package.json" ]; then
            # Replace placeholder with actual owner
            sed -i "s/\$GITHUB_REPOSITORY_OWNER/${GITHUB_REPOSITORY_OWNER}/g" package.json
            npm publish --registry=https://npm.pkg.github.com
          else
            echo "No package.json found, skipping GitHub Packages publish"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Publish to Container Registry
      - name: Set up Docker Buildx
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_container == 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_container == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push container
        if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish_container == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/public-repo:latest
            ghcr.io/${{ github.repository_owner }}/public-repo:${{ env.RELEASE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max